
</div>
</main>
<footer class="bg-teal-700 p-10 mt-24 text-white">
	<div class="flex gap-4 m-auto mt-10 mb-10 justify-center">
		<a href="https://github.com/dario-baumberger/accessibility-crash-course" target="_blank" rel="noopener" class="w-4 h-4 block">
			<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="mug-hot" class="svg-inline--fa fa-mug-hot fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M127.1 146.5c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C111.8 5.9 105 0 96.8 0H80.4C70.6 0 63 8.5 64.1 18c3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zm112 0c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C223.8 5.9 217 0 208.8 0h-16.4c-9.8 0-17.5 8.5-16.3 18 3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zM400 192H32c-17.7 0-32 14.3-32 32v192c0 53 43 96 96 96h192c53 0 96-43 96-96h16c61.8 0 112-50.2 112-112s-50.2-112-112-112zm0 160h-16v-96h16c26.5 0 48 21.5 48 48s-21.5 48-48 48z"></path></svg>
			<span class="sr-only">Buy me a Coffee</span>
		</a>
	</div>
	<p class="text-center"> 
		<small>
			Made by Dario Baumberger 2021
		</small>
	</p>
</footer>
<div class="fixed left-0 right-0 bottom-0 flex p-4 js-cookie-modal" aria-modal="true" role="dialog">
	<div class="bg-white w-full max-w-3xl mx-auto text-sm shadow-2xl">
		<div class="p-8 js-cookie-modal-content">
			<p>Diese Website verwendet Cookies, um die bestmögliche Funktionalität bereitzustellen. Diese Website zeichnet Ihr Verhalten auf, um Ihnen in Zukunft eine noch bessere Erfahrung bieten zu können. Um alle Funktionen der Website fehlerfrei nutzen zu können, empfehlen wir Ihnen, Cookies und Tracking zuzulassen. Lesen Sie mehr zum Datenschutz</p>
			<div class="flex gap-4 mt-4 flex-row-reverse justify-center">
				<button class="bg-teal-700 hover:bg-teal-900 transition-all duration-300 p-2 text-white text-sm js-cookies-accept">Zulassen</button>
				<button class="bg-teal-700 hover:bg-teal-900 transition-all duration-300 p-2 text-white text-sm js-cookies-decline">Ablehnen</button>
			</div>
		</div>
	</div>

</div>
<script>

	const navLinks = document.querySelectorAll(".js-section-links a");

	const subMenuButtons = document.querySelectorAll(".js-section-links button");
	const cookiesAccept = document.querySelector('.js-cookies-accept');
	const cookiesDecline = document.querySelector('.js-cookies-decline');
	const cookiesModal = document.querySelector('.js-cookie-modal');
	const cookiesModalContent = document.querySelector('.js-cookie-modal-content');
	const cookieName = 'cookies';
	const cookieDuration = 365;



	for (const link of navLinks) {
		link.addEventListener("click", linkClickHandler);
	}

	for (const button of subMenuButtons) {
        button.addEventListener("click", buttonClickHandler);
    }

    function buttonClickHandler(e){
        e.preventDefault();



        const isExpanded = this.getAttribute('aria-expanded') === 'true'

        this.setAttribute('aria-expanded', !isExpanded)
        this.classList.toggle('rotate-180')

		const subMenuList = this.closest('li').querySelector('ul');

		subMenuList.classList.toggle('max-h-0');
		subMenuList.setAttribute('aria-hidden', isExpanded)


    }


	function linkClickHandler(e) {
		e.preventDefault();
		const href = this.getAttribute("href").match('\\#(.*)')[0];
		const target = document.querySelector(href);
		target.setAttribute('tabindex', -1);
		target.focus({preventScroll: true});
		const offsetTop = target.offsetTop - 50;

		window.location.hash = href;

		scroll({
			top: offsetTop,
			behavior: "smooth"
		});
	}

	let menuSection = document.querySelectorAll('aside nav a');
	let mainHeadings = document.querySelectorAll(".markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6");
	let headingData = [];

	mainHeadings.forEach((heading) => {
		heading.classList.add('js-heading--out')
		headingData.push({el: heading, y: heading.offsetTop})
	})

	window.addEventListener('scroll', function() {
		mainHeadings.forEach((heading) => {

		})
	});

	function setCookie(name, value, exdays) {
		const d = new Date();
		d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
		const expires     = "expires=" + d.toUTCString();
		document.cookie = name + "=" + value + ";" + expires + ";path=/";
		cookieEvent(value)
	}

	function getCookie(cname) {
		const name = cname + "=";
		const ca   = document.cookie.split(';');
		for (let i = 0; i < ca.length; i++) {
			let c = ca[i];
			while (c.charAt(0) === ' ') {
				c = c.substring(1);
			}
			if (c.indexOf(name) === 0) {
				return c.substring(name.length, c.length);
			}
		}
		return "";
	}

	function checkCookie() {
		const cookie = getCookie(cookieName);
		if (cookie === '') {
			cookiesModal.classList.remove('hidden');
			cookiesModalContent.setAttribute('tabindex', '-1');
			cookiesModalContent.focus();
		} else {
			cookiesModal.querySelector('div').classList.add('hidden')
			const firstHeading = document.querySelector('h1');
			firstHeading.setAttribute('tabindex', '-1');
			firstHeading.focus();
		}
	}

	function prepareCookie(name, value ){
		const d = new Date();
		const duration = d.getTime() + (cookieDuration * 24 * 60 * 60 * 1000);
		setCookie(name, value, duration);
		checkCookie();
	}

	function cookieEvent(value){
		const event = new CustomEvent('cookie_event', {detail: {value}});
		document.dispatchEvent(event);
	}

	cookiesAccept.addEventListener('click', () => {
		prepareCookie(cookieName, 'accepted')
	})

	cookiesDecline.addEventListener('click', () => {
		prepareCookie(cookieName, 'declined')
	})


	checkCookie();








</script>

<script>document.addEventListener('cookie_event', (e) => {
		if(e.detail.value === 'accepted'){
			console.log(e)
		}
	});</script>

</body>
</html>
